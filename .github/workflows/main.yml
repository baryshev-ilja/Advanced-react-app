name: CI_Pipeline
run-name: ${{ github.actor }} launched the CI pipeline! ðŸš€
on:
  push:
      branches-ignore:
          - 'master'
  pull_request:
      branches:
          - 'master'

jobs:
    lint_unit_build:
        if: ${{ github.event_name == 'push' }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [ 17.x ]
        steps:
            - name: Checkout Commit
              uses: actions/checkout@v4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.node-version }}

            - name: Cache node modules
              uses: actions/cache@v3
              id: cache-dependencies
              env:
                cache-name: cache-node-modules
              with:
                path: node_modules
                key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                    ${{ runner.os }}-build-${{ env.cache-name }}-
                    ${{ runner.os }}-build-
                    ${{ runner.os }}-

            - name: Install dependencies
              if: ${{ steps.cache-dependencies.outputs.cache-hit != 'true' }}
              run: npm ci

            - name: Run lint scss
              run: npm run lint:scss

            - name: Run lint typescript
              run: npm run lint:ts

            - name: Run unit testing
              run: npm run test:unit

            - name: Run build production project
              run: npm run build:prod

    ui_test:
        if: ${{ github.event_name == 'pull_request' }}
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [ 17.x ]

        steps:
            - name: Checkout Commit
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                node-version: ${{ matrix.node-version }}

            - name: Restore node modules
              uses: actions/cache@v3
              id: cache-dependencies
              env:
                cache-name: cache-node-modules
              with:
                path: node_modules
                key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                    ${{ runner.os }}-build-${{ env.cache-name }}-
                    ${{ runner.os }}-build-
                    ${{ runner.os }}-

            - name: Install dependencies
              if: ${{ steps.cache-dependencies.outputs.cache-hit != 'true' }}
              run: npm ci

            - name: Run screenshots testing chromatic
              uses: chromaui/action@latest
              with:
                projectToken: chpt_025e1e413343d56

